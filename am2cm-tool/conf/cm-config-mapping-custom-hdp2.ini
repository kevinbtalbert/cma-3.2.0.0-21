# ACCUMULO_ON_CDP START
Printing param specs for ACCUMULO_ON_CDP

Printing additional param specs for ACCUMULO_ON_CDP
accumulo_initialize=false
accumulo_root_password = INPUT::accumulo_root_password
accumulo_instance_secret = INPUT::accumulo_instance_secret
accumulo_secure_setup=true


# HDFS START
Printing param specs for HDFS

Service param specs:
process_username=hdfs_user
process_groupname=user_group
kerberos_princ_name=hdfs_user
#hdfs_hadoop_ssl_enabled=dfs.http.policy
ipc_client_connection_max_retries=ipc.client.connect.max.retries
ipc_client_connection_max_idle_time=ipc.client.connection.maxidletime
ipc_client_idle_threshold=ipc.client.idlethreshold
dfs_permissions=dfs.permissions.enabled
hadoop_http_auth_cookie_domain=hadoop.http.authentication.cookie.domain
hadoop_secure_web_ui=hadoop.http.authentication.type
dfs_namenode_startup_delay_block_deletion_sec=dfs.namenode.startup.delay.block.deletion.sec
enable_ranger_authorization=ranger-hdfs-plugin-enabled
#ranger_service=ranger-hdfs-plugin-enabled


Role param specs for NAMENODE:
autofailover_enabled = dfs.ha.automatic-failover.enabled
dfs_federation_namenode_nameservice = dfs.internal.nameservices
# dfs_namenode_quorum_journal_name = NOT FOUND
dfs_namenode_quorum_journal_name  = dfs.internal.nameservices
namenode_java_heapsize=namenode_heapsize
#fs_checkpoint_dir_list=dfs.namenode.checkpoint.dir
dfs_http_port=dfs.namenode.http-address
namenode_log_dir=hdfs_log_dir_prefix
namenode_bind_wildcard=dfs.namenode.primary.http-address
dfs_access_time_precision=dfs.namenode.accesstime.precision
#namenode_port=dfs.namenode.rpc-address.mycluster.nn1
rlimit_fds=hdfs_user_nofile_limit

Role param specs for DATANODE:
datanode_java_heapsize = dtnode_heapsize
datanode_log_dir=hdfs_log_dir_prefix
dfs_datanode_bind_wildcard=dfs.datanode.https.address
rlimit_fds=hdfs_user_nofile_limit

Role param specs for SECONDARYNAMENODE:
secondary_namenode_bind_wildcard = dfs.namenode.secondary.http-address
dfs_secondary_https_port = dfs.namenode.secondary.https-address
secondary_namenode_java_heapsize=namenode_heapsize
#secondary_namenode_java_heapsize = NOT FOUND (bytes)
secondarynamenode_log_dir = hdfs_log_dir_prefix
rlimit_fds=hdfs_user_nofile_limit

Role param specs for FAILOVERCONTROLLER:
failover_controller_java_heapsize = dtnode_heapsize
failover_controller_log_dir=hdfs_log_dir_prefix
rlimit_fds=hdfs_user_nofile_limit

Role param specs for BALANCER:
balancer_java_heapsize = dtnode_heapsize

Role param specs for GATEWAY:
dfs_client_read_shortcircuit_streams_cache_size=dfs.client.read.shortcircuit.streams.cache.size
dfs_client_use_trash = fs.trash.interval


Role param specs for NFSGATEWAY:
nfsgateway_java_heapsize = nfsgateway_heapsize
dfs_nfs_exports_allowed_hosts = nfs.exports.allowed.hosts

dfs_nfs3_dump_dir = nfs.file.dump.dir
dfs_nfs3_dump_dir = dfs.nfs3.dump.dir

Role param specs for JOURNALNODE:
journalnode_log_dir=hdfs_log_dir_prefix
journalnode_bind_wildcard=dfs.journalnode.http-address
rlimit_fds=hdfs_user_nofile_limit

Safety valves for HDFS:
hdfs_service_config_safety_valve = hdfs-site.xml

Printing additional param specs for HDFS

Printing additional param specs for NAMENODE
dfs_federation_namenode_nameservice = BP::hdfs-site::dfs.internal.nameservices

Printing additional param specs for SECONDARYNAMENODE
fs_checkpoint_dir_list=BP::hdfs-site::dfs.namenode.checkpoint.dir

Printing additional param specs for JOURNALNODE

Printing additional param specs for BALANCER

Printing additional param specs for DATANODE

Printing additional param specs for FAILOVERCONTROLLER

Printing additional param specs for NFSGATEWAY

Printing additional param specs for GATEWAY
#This needs more work at the code.
hdfs_client_config_safety_valve=BP::hdfs-site::dfs.nameservices

Printing additional param specs for HTTPFS

Printing param specs for ZOOKEEPER

process_username = zk_user
process_groupname=user_group
kerberos_princ_name=zk_user



Role param specs for SERVER:
zookeeper_server_java_heapsize = zk_server_heapsize
zk_server_log_dir=zk_log_dir

Printing additional param specs for ZOOKEEPER
enableSecurity = BP::cluster-env::security_enabled

Printing additional param specs for SERVER
dataLogDir=BP::zoo.cfg::dataDir
zk_server_java_opts = -Dzookeeper.skipACL=yes

# ATLAS START

Printing param specs for ATLAS
process_username = metadata_user
process_groupname=user_group
#enable_ranger_authorization=ranger-atlas-plugin-enabled
ranger_service=ranger-atlas-plugin-enabled

Role param specs for ATLAS_SERVER:
atlas_max_heap_size = atlas_server_xmx


Printing additional param specs for ATLAS
#conf/atlas-application.properties_role_safety_valve=atlas.metadata.namespace=BP::application-properties::ambari.cluster.name
#conf/atlas-application.properties_role_safety_valve=ranger.plugin.atlas.access.cluster.name=BP::application-properties::ranger.plugin.atlas.ambari.cluster.name

Printing additional param specs for ATLAS_SERVER
ATLAS_SERVER_role_env_safety_valve=ATLAS_CUSTOM_OPTS=-Dzookeeper.sasl.client.username=BP::zookeeper-env::zk_user
conf/atlas-application.properties_role_safety_valve=atlas.metadata.namespace
#atlas_authentication_method_trustedproxy=BP::application-properties::atlas.sso.knox.enabled
#conf/ranger-atlas-security.xml_role_safety_valve=ranger.plugin.atlas.service.name

Printing additional param specs for GATEWAY
atlas-conf/atlas-client.properties_client_config_safety_valve = atlas.metadata.namespace

Safety valves for ATLAS_SERVER:
conf/atlas-application.properties_role_safety_valve = application-properties
conf/ranger-atlas-security.xml_role_safety_valve = ranger-atlas-security.xml
conf/ranger-atlas-audit.xml_role_safety_valve = ranger-atlas-audit.xml

# HBASE START
Printing param specs for HBASE
process_username = hbase_user
process_groupname=user_group
kerberos_princ_name=hbase_user
hbase_atlas_hook_enable=hbase.atlas.hook
#enable_ranger_authorization=ranger-hbase-plugin-enabled
ranger_service=ranger-hbase-plugin-enabled

Role param specs for MASTER:
hbase_master_java_heapsize=hbase_master_heapsize
hbase_master_log_dir=hbase_log_dir
rlimit_fds=hbase_user_nofile_limit

#hbase_rootdir = hbase.rootdir

Role param specs for REGIONSERVER:
regionserver_truststore_file=ssl.client.truststore.location
hbase_regionserver_log_dir=hbase_log_dir
hbase_regionserver_java_heapsize=hbase_regionserver_heapsize
rlimit_fds=hbase_user_nofile_limit

Safety valves for HBASE:
application_properties_safety_valve=hbase-atlas-application-properties

Printing additional param specs for HBASE
application_properties_safety_valve=atlas.metadata.namespace
#ranger_security_safety_valve=ranger.plugin.hbase.service.name


Printing additional param specs for MASTER

Printing additional param specs for REGIONSERVER

Printing additional param specs for HBASETHRIFTSERVER

Printing additional param specs for HBASERESTSERVER

#regionserver_truststore_password = INPUT::ssl_client_truststore_password



# HIVE START
Printing param specs for HIVE
process_username = hive_user
process_groupname=user_group
kerberos_princ_name=hive_user
hive_metastore_database_type = hive_database_type
hive_metastore_database_name = ambari.hive.db.schema.name
hive_metastore_database_user = javax.jdo.option.ConnectionUserName
hive_metastore_database_host = javax.jdo.option.ConnectionURL
hive_metastore_database_auto_create_schema=datanucleus.autoCreateSchema
#enable_ranger_authorization=ranger-hive-plugin-enabled
atlas_service=hive.atlas.hook



Printing additional param specs for HIVE
hive_metastore_database_password=INPUT::hive_metastore_database_password
hive_metastore_database_host = INPUT::hive_jdbc_url_override
hive_metastore_database_port = INPUT::hive_jdbc_url_override
application_properties_safety_valve=atlas.metadata.namespace
#ranger_security_safety_valve=ranger.plugin.hive.service.name
ranger_service=BP::ranger-env::ranger-hive-plugin-enabled


Role param specs for HIVEMETASTORE:
hive_metastore_java_heapsize=hive.metastore.heapsize
hive_log_dir=hive_log_dir
log_threshold=hive.log.level
rlimit_fds=hive_user_nofile_limit
hive_compactor_initiator_on=hive.compactor.initiator.on

Safety valves for HIVE:
application_properties_safety_valve=hive-atlas-application.properties

Safety valves for HIVEMETASTORE:
hive_metastore_config_safety_valve = hivemetastore-site.xml

Role param specs for GATEWAY:
log_threshold=hive.log.level

Printing additional param specs for HIVEMETASTORE

Printing param specs for HIVE_ON_TEZ
process_username = hive_user
process_groupname=user_group
kerberos_princ_name=hive_user
hive_create_as_acid = metastore.create.as.acid
#enable_ranger_authorization=ranger-hive-plugin-enabled
#ranger_service=ranger-hive-plugin-enabled
atlas_service=hive.atlas.hook

Role param specs for HIVESERVER2:
hiveserver2_java_heapsize = hive.heapsize
hive_log_dir=hive_log_dir
hiveserver2_enable_ldap_auth=hive.server2.authentication
log_threshold = hive.log.level
max_log_size = hive2_log_maxfilesize
max_log_backup_index = hive2_log_maxbackupindex
rlimit_fds=hive_user_nofile_limit

Safety valves for HIVE_ON_TEZ:
application_properties_safety_valve=hive-atlas-application.properties

Safety valves for HIVESERVER2:
hive_hs2_config_safety_valve = hiveserver2-site.xml

Printing additional param specs for HIVE_ON_TEZ
application_properties_safety_valve=atlas.metadata.namespace
#ranger_security_safety_valve=ranger.plugin.hive.service.name
ranger_service=BP::ranger-env::ranger-hive-plugin-enabled

Printing additional param specs for HIVE_SERVER

Printing param specs for TEZ
process_username = tez_user
#kerberos_princ_name=tez_user

Safety valves for TEZ:


Safety valves for GATEWAY:
tez-conf/tez-site.xml_client_config_safety_valve = tez-site.xml

Printing additional param specs for TEZ
tez.cluster.additional.classpath.prefix=/opt/cloudera/parcels/GPLEXTRAS/jars/*

#OOZIE START
Printing param specs for OOZIE
process_username = oozie_user
process_groupname=user_group
kerberos_princ_name=oozie_user

#oozie_load_balancer = oozie.base.url


Role param specs for OOZIE_SERVER:
oozie_java_heapsize=oozie_heapsize
oozie_database_name=oozie.db.schema.name
oozie_database_type=oozie_database
oozie_database_user=oozie.service.JPAService.jdbc.username
oozie_http_port=oozie.base.url
oozie_data_dir=oozie_data_dir
oozie_log_dir=oozie_log_dir
oozie_database_host=oozie.service.JPAService.jdbc.url
rlimit_fds=oozie_user_nofile_limit

Printing additional param specs for  OOZIE
#oozie_load_balancer_https_port = BP::oozie-site::oozie.base.url
#oozie_load_balancer_http_port = BP::oozie-site::oozie.base.url


Printing additional param specs for  OOZIE_SERVER
oozie_database_password=INPUT::oozie_database_password
oozie_database_host = INPUT::oozie_service_JPAService_jdbc_url
#oozie_config_safety_valve=oozie.service.AuthorizationService.admin.users=BP::oozie-env::oozie_admin_users
oozie_java_opts=-XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M -XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80 -XX:+DisableExplicitGC



#YARN START

Printing param specs for YARN

process_username = yarn_user
process_groupname = user_group
kerberos_princ_name=yarn_user

# history_process_username=mapred_user
# kerberos_role_princ_name=mapred_user
#enable_ranger_authorization=ranger-yarn-plugin-enabled
ranger_service=ranger-yarn-plugin-enabled
mapreduce_shuffle_ssl_enabled=mapreduce.shuffle.ssl.enabled

Role param specs for RESOURCEMANAGER:
resource_manager_java_heapsize=resourcemanager_heapsize
resource_manager_log_dir = yarn_log_dir_prefix
yarn_rm_bind_wildcard=yarn.resourcemanager.bind-host
rlimit_fds=yarm_user_nofile_limit

Role param specs for NODEMANAGER:
node_manager_java_heapsize=nodemanager_heapsize
node_manager_log_dir = yarn.nodemanager.log-dirs
#yarn_nodemanager_bind_wildcard=yarn.nodemanager.bind-host
yarn_docker_binary = docker_binary
yarn_docker_allowed_devices = docker_allowed_devices
yarn_docker_no_new_privileges_enabled= docker_privileged-containers_enabled
yarn_docker_allowed_ro_mounts=docker_allowed_ro-mounts
yarn_docker_allowed_rw_mounts=docker_allowed_rw-mounts
yarn_docker_allowed_volume_drivers=docker_allowed_volume-drivers
docker_on_yarn_enabled=docker_module_enabled
yarn_docker_trusted_registries=docker_trusted_registries
gpu_enabled=gpu_module_enabled
container_executor_min_user_id = min_user_id
linux_container_executor_cgroups_hierarchy=yarn_hierarchy
rlimit_fds=yarm_user_nofile_limit

Role param specs for JOBHISTORY:
mr2_jobhistory_java_heapsize=jobhistory_heapsize
mr2_jobhistory_log_dir = mapreduce_log_dir_prefix
history_process_username = mapred_user
kerberos_role_princ_name = mapred_user
#log_threshold=mapreduce.map.log.level
yarn_jobhistory_bind_wildcard=mapreduce.jobhistory.bind-host
rlimit_fds=mapred_user_nofile_limit

Safety valves for RESOURCEMANAGER:
resourcemanager_capacity_scheduler_configuration = capacity-scheduler.xml

Safety valves for NODEMANAGER:
# nodemanager_config_safety_valve = container-executor.xml

Printing additional param specs for  YARN
yarn_log_aggregation_TFile_remote_app_log_dir_suffix=FIXED_INPUT::logs
yarn_log_aggregation_IFile_remote_app_log_dir_suffix=FIXED_INPUT::logs-ifile

#ranger_security_safety_valve=ranger.plugin.hive.service.name
#ssl_server_keystore_password = INPUT::ssl_server_keystore_password
#ssl_server_keystore_keypassword = INPUT::ssl_server_keystore_keypassword
#ssl_client_truststore_password = INPUT::ssl_client_truststore_password

Printing additional param specs for GATEWAY
# SPARk START
mapreduce_client_config_safety_valve=mapreduce.jobhistory.intermediate-done-dir,mapreduce.jobhistory.done-dir
yarn_client_config_safety_valve=mapreduce.jobhistory.intermediate-done-dir,mapreduce.jobhistory.done-dir
mapreduce_admin_user_env=FIXED_INPUT::LD_LIBRARY_PATH=$HADOOP_COMMON_HOME/lib/native:$JAVA_LIBRARY_PATH

Printing additional param specs for RESOURCEMANAGER

Printing additional param specs for NODEMANAGER

Printing additional param specs for JOBHISTORY


Printing param specs for SPARK_ON_YARN
process_username = spark_user
process_groupname = spark_group
kerberos_princ_name=spark_user

Role param specs for SPARK_YARN_HISTORY_SERVER:
history_server_max_heapsize = spark_daemon_memory
rlimit_fds=mapred_user_nofile_limit


Safety valves for SPARK_ON_YARN:

Safety valves for SPARK_YARN_HISTORY_SERVER:
#spark-conf/spark-history-server.conf_role_safety_valve = spark2-defaults

Safety valves for GATEWAY:
spark-conf/spark-defaults.conf_client_config_safety_valve = spark2-defaults

Printing additional param specs for SPARK_ON_YARN
atlas_service=BP::spark2-defaults::spark.lineage.enabled

Printing additional param specs for SPARK_YARN_HISTORY_SERVER

Printing additional param specs for GATEWAY
spark_lineage_enabled = BP::spark2-defaults::spark.lineage.enabled
spark_network_encryption_enabled = BP::spark2-defaults::spark.authenticate

Printing param specs for LIVY
process_username = livy2_user
process_groupname = livy2_group
kerberos_princ_name=livy2_user

Role param specs for LIVY_SERVER:
log_dir=livy2_log_dir
livy_session_recovery_enabled = livy.server.recovery.mode



Safety valves for LIVY_SERVER:
livy-conf/livy.conf_role_safety_valve = livy2-conf
#livy-conf/livy.conf_role_safety_valve = livy2-client-conf

Printing additional param specs for LIVY

Printing additional param specs for LIVY_SERVER
#Append below config value to existing value
livy_admin_users=BP::knox-env::knox_user

Printing param specs for KAFKA
process_username=kafka_user
ranger_service=ranger-kafka-plugin-enabled
zookeeper.chroot = zookeeper.connect

Role param specs for KAFKA_BROKER:
log_dir = kafka_log_dir
rlimit_fds=kafka_user_nofile_limit
max_log_size = kafka_log_maxfilesize
max_log_backup_index = kafka_log_maxbackupindex
log.retention.ms = log.retention.hours
log.roll.ms=og.roll.hours
#enable_ranger_authorization=ranger-kafka-plugin-enabled
ssl_port = listeners

Safety valves for KAFKA:

Safety valves for KAFKA_BROKER:
kafka.properties_role_safety_valve = kafka-broker

Printing additional param specs for  KAFKA
#kerberos.auth.enable=BP::cluster-env::security_enabled

Printing additional param specs for  KAFKA_BROKER
# kafka.properties_role_safety_valve=broker.id.generation.enable


# KNOX START
Printing param specs for KNOX
process_username = knox_user
process_groupname=knox_group
kerberos_princ_name=knox_user
#enable_ranger_authorization=ranger-knox-plugin-enabled
ranger_service=ranger-knox-plugin-enabled


Printing additional param specs for  KNOX

Printing additional param specs for KNOX_GATEWAY
gateway_master_secret = INPUT::gateway_master_secret
conf/ranger-knox-security.xml_role_safety_valve=ranger.plugin.knox.service.name
gateway_auto_discovery_cdp_proxy_enabled_ranger = BP::ranger-admin-site::ranger.sso.enabled
gateway_auto_discovery_cdp_proxy_enabled_ranger_ui  = BP::ranger-admin-site::ranger.sso.enabled
gateway_auto_discovery_cdp_proxy_enabled_atlas = BP::application-properties::atlas.sso.knox.enabled
gateway_auto_discovery_cdp_proxy_enabled_atlas_ui = BP::application-properties::atlas.sso.knox.enabled

Printing additional param specs for IDBROKER

Safety valves for KNOX:

Safety valves for KNOX_GATEWAY:
conf/ranger-knox-security.xml_role_safety_valve = ranger-knox-security.xml
conf/ranger-knox-audit.xml_role_safety_valve = ranger-knox-audit.xml

# QUEUEMANAGER
Printing param specs for QUEUEMANAGER

Printing additional param specs for  QUEUEMANAGER
kerberos.auth.enabled = BP::cluster-env::security_enabled


# KNOX START
Printing param specs for RANGER

ranger_database_port=ranger.jpa.jdbc.url
ranger_database_type = DB_FLAVOR
ranger_database_host = db_host
ranger_database_name = db_name
ranger_database_user = db_user
load_balancer_url = policymgr_external_url

Role param specs for RANGER_ADMIN:
process_username = ranger_user
process_groupname = ranger_group
kerberos_role_princ_name = ranger.admin.kerberos.principal

Role param specs for RANGER_USERSYNC:
process_username = ranger_user
process_groupname = ranger_group
kerberos_role_princ_name = ranger.usersync.kerberos.principal


Role param specs for RANGER_TAGSYNC:
process_username = ranger_user
process_groupname = ranger_group
kerberos_role_princ_name = ranger.tagsync.kerberos.principal


Printing additional param specs for RANGER
ranger_database_password = INPUT::ranger_database_password
rangeradmin_user_password= INPUT::rangeradmin_user_password
rangerusersync_user_password= INPUT::rangerusersync_user_password
rangertagsync_user_password= INPUT::rangertagsync_user_password
keyadmin_user_password= INPUT::rangerkeyadmin_user_password




Printing additional param specs for RANGER_ADMIN
RANGER_ADMIN_role_env_safety_valve=JAVA_OPTS=-Dzookeeper.sasl.client.username=BP::zookeeper-env::zk_user
#conf/ranger-admin-site.xml_role_safety_valve=ranger.plugins.hdfs.serviceuser=BP::hadoop-env::hdfs_user,ranger.plugins.hbase.serviceuser=BP::hbase-env::hbase_user

ranger.ldap.ad.url=BP::ranger-ugsync-site::ranger.usersync.ldap.url
ranger.ldap.ad.bind.dn=BP::ranger-ugsync-site::ranger.usersync.ldap.binddn
ranger.ldap.group.searchbase=BP::ranger-ugsync-site::ranger.usersync.group.searchbase

ranger_ldap_bind_password = INPUT::ranger_usersync_ldap_ldapbindpassword
ranger.ldap.bind.dn=BP::ranger-ugsync-site::ranger.usersync.ldap.binddn
ranger.ldap.url=BP::ranger-ugsync-site::ranger.usersync.ldap.url
ranger.ldap.group.searchfilter=BP::ranger-ugsync-site::ranger.usersync.group.searchfilter

ranger.audit.solr.max.shards.per.node = BP::ranger-env::ranger_solr_shards,BP::ranger-env::ranger_solr_replication_factor

#ranger.authentication.allow.trustedproxy=BP::ranger-admin-site::ranger.sso.enabled

Printing additional param specs for RANGER_TAGSYNC
conf/atlas-application.properties_role_safety_valve=atlas.metadata.namespace
conf/ranger-tagsync-site.xml_role_safety_valve = ranger.tagsync.atlas.hdfs.instance.<ambari-cluster-name>.ranger.service
ranger.tagsync.atlas.default.cluster.name=INPUT::ambari.cluster.name

Printing additional param specs for RANGER_USERSYNC
ranger_usersync_ldap_ldapbindpassword=INPUT::ranger_usersync_ldap_ldapbindpassword


Safety valves for RANGER:


Safety valves for RANGER_ADMIN:
conf/ranger-admin-site.xml_role_safety_valve = ranger-admin-site.xml

Safety valves for RANGER_TAGSYNC:
conf/ranger-tagsync-site.xml_role_safety_valve = ranger-tagsync-site.xml
conf/atlas-application.properties_role_safety_valve=tagsync-application-properties


Safety valves for RANGER_USERSYNC:
conf/ranger-ugsync-site.xml_role_safety_valve = ranger-ugsync-site.xml


Printing param specs for RANGER_KMS
process_username = kms_user
process_groupname = kms_group
kerberos_princ_name = kms_user
ranger_kms_database_port=ranger.ks.jpa.jdbc.url

ranger_kms_database_type = DB_FLAVOR
ranger_kms_database_host = db_host
ranger_kms_database_name = db_name
ranger_kms_database_user = db_user

Role param specs for RANGER_KMS_SERVER:
ranger_kms_max_heap_size=ranger_kms_max_heap_size


Printing additional param specs for RANGER_KMS
ranger_kms_database_password = INPUT::ranger_kms_database_password


Printing additional param specs for RANGER_KMS_SERVER
ranger_kms_master_key_password= INPUT::ranger_kms_master_key_password
ranger_kms_http_port = BP::kms-env::kms_port
ranger_kms_https_port = BP::ranger-kms-site::ranger.service.https.port
RANGER_KMS_SERVER_role_env_safety_valve=JAVA_OPTS=-Dzookeeper.sasl.client.username=BP::zookeeper-env::zk_user

# These configs are condition based - hence adding it here,
hadoop_kms_authentication_signer_secret_provider=BP::ranger-kms-site::hadoop.kms.authentication.signer.secret.provider
hadoop_kms_authentication_signer_secret_provider_zookeeper_auth_type=BP::ranger-kms-site::hadoop.kms.authentication.signer.secret.provider.zookeeper.auth.type

#conf/ranger-kms-security.xml_role_safety_valve=ranger.plugin.kms.service.name
conf/kms-site.xml_role_safety_valve=hadoop.kms.authentication.zk-dt-secret-manager.enable,hadoop.kms.authentication.zk-dt-secret-manager.zkConnectionString,hadoop.kms.authentication.zk-dt-secret-manager.znodeWorkingPath,hadoop.kms.authentication.zk-dt-secret-manager.zkAuthType,hadoop.kms.authentication.zk-dt-secret-manager.kerberos.keytab

Safety valves for RANGER_KMS:

Safety valves for RANGER_KMS_SERVER:
conf/ranger-kms-security.xml_role_safety_valve = ranger-kms-security.xml
conf/dbks-site.xml_role_safety_valve = dbks-site.xml
conf/kms-site.xml_role_safety_valve = kms-site.xml
conf/ranger-kms-site.xml_role_safety_valve = ranger-kms-site.xml
conf/ranger-kms-audit.xml_role_safety_valve = ranger-kms-audit.xml

Printing param specs for SOLR

Printing additional param specs for SOLR
solr_security_authentication = BP::cluster-env::security_enabled

Printing additional param specs for SOLR_SERVER

Printing param specs for NIFI

Service param specs:

Safety valves for NIFI:
NIFI_service_env_safety_valve = NOT FOUND

Safety valves for NIFI_NODE:
staging/nifi.properties.xml_role_safety_valve = nifi-properties

Role param specs for NIFI_NODE:
java.arg.2 = nifi.initial_mem
java.arg.3 = nifi.max_mem
nifi.zookeeper.root.node = nifi.nifi_znode
nifi.database.directory = nifi.database.dir
nifi.flowfile.repository.directory = nifi.flowfile.repository.dir
nifi.provenance.repository.directory.default = nifi.provenance.repository.dir.default
nifi.content.repository.directory.default = nifi.content.repository.dir.default
nifi.web.http.port = nifi.node.port
nifi.web.https.port = nifi.node.ssl.port


Printing param specs for NIFIREGISTRY

Safety valves for NIFI_REGISTRY_SERVER:
staging/nifi-registry.properties.xml_role_safety_valve = nifi-registry-properties

Role param specs for NIFI_REGISTRY_SERVER:
# nifi.registry.web.jetty.threads = nifi.registry.web.jetty.threads
nifi.registry.web.http.port = nifi.registry.port
nifi.registry.web.https.port = nifi.registry.port.ssl


Printing param specs for POWERSCALE

Service param specs:
default_fs_name=fs.defaultFS
dfs_replication=dfs.replication
webhdfs_url=onefs_host
kerberos_authentication=hadoop.security.authentication


Role param specs for GATEWAY:
dfs_client_read_shortcircuit=dfs.client.read.shortcircuit

Printing additional param specs for POWERSCALE

Printing additional param specs for GATEWAY

Safety valves for POWERSCALE:
log4j_safety_valve = log4j.properties
hdfs_client_config_safety_valve = hdfs-site.xml
core_site_safety_valve = core-site.xml