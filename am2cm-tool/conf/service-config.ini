[CONFIGS-SERVICE-COMPONENT-MAPPINGS]
#These are Ambari Service-components mappings
HDFS=DATANODE,JOURNALNODE,NAMENODE,SECONDARY_NAMENODE,BALANCER,ZKFC,NFS_GATEWAY,HDFS_CLIENT
YARN=RESOURCEMANAGER,NODEMANAGER,HISTORYSERVER,YARN_CLIENT
HIVE_ON_TEZ=HIVE_SERVER,HIVE_CLIENT
HIVE=HIVE_METASTORE,HIVE_CLIENT
TEZ=TEZ_CLIENT
ZOOKEEPER=ZOOKEEPER_SERVER
HBASE=HBASE_MASTER,HBASE_REGIONSERVER,HBASE_CLIENT
KAFKA=KAFKA_BROKER
OOZIE=OOZIE_SERVER
SQOOP_CLIENT=SQOOP
SPARK_ON_YARN=SPARK2_JOBHISTORYSERVER,SPARK2_CLIENT
LIVY=LIVY2_SERVER
ATLAS=ATLAS_SERVER,ATLAS_CLIENT
SOLR=INFRA_SOLR,INFRA_SOLR_CLIENT
RANGER=RANGER_ADMIN,RANGER_USERSYNC,RANGER_TAGSYNC
RANGER_KMS=RANGER_KMS_SERVER
KNOX=KNOX_GATEWAY
NIFI=NIFI_MASTER
NIFIREGISTRY=NIFI_REGISTRY_MASTER
POWERSCALE=ONEFS_CLIENT
ACCUMULO_ON_CDP=ACCUMULO_GC,ACCUMULO_MASTER,ACCUMULO_MONITOR,ACCUMULO_TSERVER,ACCUMULO_TRACER,ACCUMULO_CLIENT

[CONFIGS-ADD-SERVICE-COMPONENT-MAPPINGS]
QUEUEMANAGER=QUEUEMANAGER_STORE,QUEUEMANAGER_WEBAPP
#CORE_SETTINGS=STORAGEOPERATIONS
#PHOENIX=QUERY_SERVER
#HUE=KT_RENEWER,HUE_LOAD_BALANCER,HUE_SERVER

#Add the left side service-component to the first host where right side service-component placed
#To add all to hosts where the service-component placed, use the ##addAll flag
[CONFIGS-ADD-ROLE-MAPPINGS]
HDFS##BALANCER=HDFS##NAMENODE
QUEUEMANAGER##QUEUEMANAGER_STORE=YARN##RESOURCEMANAGER
QUEUEMANAGER##QUEUEMANAGER_WEBAPP=YARN##RESOURCEMANAGER
SPARK_ON_YARN##GATEWAY=OOZIE##OOZIE_SERVER##addAll
#HDFS##HTTPFS=HDFS##JOURNALNODE
#HBASE##HBASERESTSERVER=HBASE##MASTER
#HBASE##HBASETHRIFTSERVER=HBASE##MASTER
#KNOX##IDBROKER=KNOX##KNOX_GATEWAY
#PHOENIX##QUERY_SERVER=PHOENIX_QUERY_SERVER
#HUE##HUE_SERVER=HBASE##MASTER
#HUE##HUE_LOAD_BALANCER=HBASE##MASTER
#HUE##KT_RENEWER=HBASE##MASTER
#RANGER##RANGER_TAGSYNC=RANGER##RANGER_USERSYNC

[CONFIGS-SERVICE-COMPONENT-MAPPINGS-NOTSUPPORTED]
AMBARI_METRICS=METRICS_COLLECTOR
HIVE_SERVER_INTERACTIVE(LLAP)=HIVE_SERVER_INTERACTIVE
ZEPPELIN=ZEPPELIN_MASTER
DRUID=DRUID_COORDINATOR,DRUID_OVERLORD,DRUID_HISTORICAL,DRUID_BROKER,DRUID_MIDDLEMANAGER,DRUID_ROUTER

# This is to avoid so many unwanted configs going into safety valve.
# Ex. HIVE does not have HIVESERVER2/LLAP - but those configs still go to safety valve.
#
[CONFIGS-SERVICE-CMCOMPONENT-MAPPINGS]
HIVE_ON_TEZ=HIVESERVER2,HIVEMETASTORE,WEBHCAT,HIVE_LLAP,LLAPPROXY
HIVE=HIVESERVER2,HIVEMETASTORE,WEBHCAT,HIVE_LLAP,LLAPPROXY


[CONFIGS-SERVICE-CONFIGTYPE-MAPPINGS]
HDFS=core-site,hadoop-env,hadoop-policy,hdfs-site,viewfs-mount-table,cluster-env,ranger-hdfs-audit,ranger-hdfs-plugin-properties,ranger-hdfs-policymgr-ssl,ranger-hdfs-security
#ranger-hdfs-security

YARN=container-executor,yarn-env,yarn-site,mapred-site,capacity-scheduler,mapred-env,cluster-env,ranger-yarn-audit,ranger-yarn-plugin-properties,ranger-yarn-policymgr-ssl,ranger-yarn-security
#,ranger-yarn-audit,ranger-yarn-plugin-properties,ranger-yarn-policymgr-ssl,ranger-yarn-security,

HIVE_ON_TEZ=hive-site,hiveserver2-site,hive-env,cluster-env,hive-log4j2,hive-atlas-application.properties,hive-atlas-application.properties,ranger-hive-audit,ranger-hive-plugin-properties,ranger-hive-security

HIVE=hive-site,hivemetastore-site,hive-env,cluster-env,ranger-hive-security
#,hive-atlas-application.properties,ranger-hive-audit,ranger-hive-security,

ZOOKEEPER=zoo.cfg,zookeeper-env,cluster-env

HBASE=hbase-env,hbase-policy,hbase-site,cluster-env,hbase-atlas-application-properties,hbase-atlas-application-properties,ranger-hbase-security,,ranger-hbase-plugin-properties,ranger-hbase-audit
#,ranger-hbase-policymgr-ssl,

TEZ=tez-env,tez-site
KAFKA=kafka-broker,kafka-env,kafka-log4j,kafka_client_jaas_conf,kafka_jaas_conf,cluster-env,ranger-kafka-audit,ranger-kafka-plugin-properties,ranger-kafka-security
#,ranger-kafka-audit,ranger-kafka-plugin-properties,ranger-kafka-policymgr-ssl,ranger-kafka-security

OOZIE=oozie-env,oozie-site,cluster-env

SQOOP_CLIENT=sqoop-env,sqoop-site,sqoop-atlas-application.properties,cluster-env

SPARK_ON_YARN=spark2-env,spark2-defaults,spark2-env,spark2-hive-site-override,spark2-log4j-properties

ATLAS=application-properties,atlas-env,atlas-solrconfig,cluster-env,ranger-atlas-audit,ranger-atlas-plugin-properties,ranger-atlas-security
SOLR=infra-solr-env,infra-solr-security-json,infra-solr-xml,cluster-env

LIVY=livy2-client-conf,livy2-conf,livy2-env,livy2-log4j-properties,livy2-spark-blacklist

KNOX=knox-env,admin-topology,gateway-site,gateway-log4j,ldap-log4j,knoxsso-topology,topology,users-ldif,ranger-knox-audit,ranger-knox-plugin-properties,ranger-knox-security
#ranger-knox-policymgr-ssl

RANGER=ranger-env,ranger-admin-site,admin-properties,ranger-ugsync-site,ranger-tagsync-site,ranger-solr-configuration,tagsync-application-properties

RANGER_KMS=dbks-site,kms-env,kms-log4j,kms-properties,kms-site,ranger-kms-audit,ranger-kms-security,ranger-kms-site

NIFI=nifi-ambari-config,nifi-bootstrap-env,nifi-jaas-conf,nifi-env,nifi-toolkit-env,nifi-state-management-env,ranger-nifi-audit,nifi-authorizers-env,nifi-flow-env,nifi-properties,nifi-bootstrap-notification-services-env,nifi-login-identity-providers-env,nifi-node-logback-env,ranger-nifi-security,ranger-nifi-plugin-properties,cluster-env

NIFIREGISTRY=ranger-nifi-registry-audit,nifi-registry-ambari-config,nifi-registry-bootstrap-env,nifi-registry-providers-env,nifi-registry-properties,nifi-registry-identity-providers-env,nifi-registry-authorizers-env,ranger-nifi-registry-plugin-properties,nifi-registry-logback-env,ranger-nifi-registry-security,nifi-registry-env,cluster-env

POWERSCALE=core-site,hdfs-site,onefs

ACCUMULO_ON_CDP=accumulo-env,accumulo-site,accumulo-log4j

[CONFIGS-SERVICE-MAPPINGS]
# AmbariService Names = CMService Name
# SQOOP=SQOOP_CLIENT


# This is needed only if Service name and Display-name is different.
[CONFIGS-SERVICE-DISPLAYNAME-MAPPINGS]
SPARK_ON_YARN=Spark
QUEUEMANAGER=YARN Queue Manager
RANGER_KMS=Ranger KMS
POWERSCALE=DellEMC PowerScale

[CONFIGS-COMPONENT-MAPPINGS]
# Ambari = CM component mappings.
SECONDARY_NAMENODE=SECONDARYNAMENODE
NFS_GATEWAY=NFSGATEWAY
ZOOKEEPER_SERVER=SERVER
HISTORYSERVER=JOBHISTORY
ZKFC=FAILOVERCONTROLLER
HBASE_REGIONSERVER=REGIONSERVER
HBASE_MASTER=MASTER
HIVE_SERVER=HIVESERVER2
HIVE_CLIENT=GATEWAY
HIVE_METASTORE=HIVEMETASTORE
TEZ_CLIENT=GATEWAY
SQOOP=GATEWAY
SPARK2_JOBHISTORYSERVER=SPARK_YARN_HISTORY_SERVER
SPARK2_CLIENT=GATEWAY
ATLAS_CLIENT=GATEWAY
INFRA_SOLR_CLIENT=GATEWAY
INFRA_SOLR=SOLR_SERVER
LIVY2_SERVER=LIVY_SERVER
HDFS_CLIENT=GATEWAY
YARN_CLIENT=GATEWAY
HBASE_CLIENT=GATEWAY
NIFI_MASTER=NIFI_NODE
NIFI_REGISTRY_MASTER=NIFI_REGISTRY_SERVER
ONEFS_CLIENT=GATEWAY
ACCUMULO_CLIENT=GATEWAY
