# Copyright 2023 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
# Get Environment details
- set_fact:
    dwx_endpoint_api: "{{ cdp_endpoint_url }}/dwx/api/v2"

- name: DEBUG - dwx_endpoint_api
  debug:
    msg: "{{ dwx_endpoint_api }}"

- name: Get Environment CRN
  uri:
    url: "{{ dwx_endpoint_api }}/environments"
    method: GET
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: dwx_environments

- name: DEBUG - dwx_environments
  debug:
    msg: "{{ dwx_environments }}"
    
- set_fact:
    dwx_env_crn: "{{ dwx_environments.json | community.general.json_query(query) }}"
  vars:
    query: "clusters[?name == '{{ environment_name }}' ].environmentCRN | [0]"

- name: DEBUG - dwx_env_crn
  debug:
    msg: "{{ dwx_env_crn }}"

- set_fact:
    dwx_env_id: "{{ dwx_environments.json | community.general.json_query(query) }}"
  vars:
    query: "clusters[?name == '{{ environment_name }}' ].id | [0]"

- name: DEBUG - dwx_env_id
  debug:
    msg: "{{ dwx_env_id }}"

- set_fact:
    dwx_env_status: "{{ dwx_environments.json | community.general.json_query(query) }}"
  vars:
    query: "clusters[?name == '{{ environment_name }}' ].status | [0]"

- name: DEBUG - dwx_env_status
  debug:
    msg: "{{ dwx_env_status }}"


# Activate env (that will trigger default Database Catalog to be created)
- name: Activate Environment and create Database Catalog
  uri:
    url: "{{ dwx_endpoint_api }}/environments?environmentCrn={{ dwx_env_crn }}"
    method: POST
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body_format: json
    body: "{{ lookup('template', 'activate_env.json') }}"
    status_code: [200, 202]
    return_content: yes
    validate_certs: no
    timeout: 300
  register: answer_to_activate_env
  when: dwx_env_status != 'Running'

- name: Get new environment ID (once environment has been activated) 
  set_fact:
    dwx_env_id: "{{ answer_to_activate_env.json | community.general.json_query(query) }}"
  vars:
    query: "clusterId"
  when: dwx_env_status != 'Running'

- name: DEBUG - dwx_env_id
  debug:
    msg: "{{ dwx_env_id }}"
  when: dwx_env_status != 'Running'

#  Wait for Environment to be running
- name: Check Environment running
  uri:
    url: "{{ dwx_endpoint_api }}/environments/{{ dwx_env_id }}"
    method: GET
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: env_activation
  until: " env_activation.json.cluster.status == 'Running' "
  retries: 60
  delay: 5



