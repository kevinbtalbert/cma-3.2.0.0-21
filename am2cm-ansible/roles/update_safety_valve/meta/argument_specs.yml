argument_specs:
  main:
    options:
      service_name:
        type: str
        required: true
      name:
        type: str
        required: true
        description: "Name of the safety valve to update"
      value:
        type: raw
        required: true
        description: "Value to update the safety valve with"
      state:
        type: str
        required: true
        choices:
          - present
          - absent
        description:
          - "If state is 'present', then the <value> type is 'dict'\
          i.e. update safety valve <name> with {'foo': 'bar'} if said valve doesn't already contains it."
          - "If state is 'absent', then the type is 'list'\
          i.e. delete from safety valve <name> the keys ['foo', 'bar'] with their values."
      configuration_type:
        type: str
        required: false
        default: SERVICE
        choices:
          - SERVICE
          - ROLE
        description: "Safety valves can be SERVICE or ROLE level safety valves."
      cm_role_name:
        type: str
        required: false
        description: "If configuration_type is 'ROLE', cm_role_name is needed."
      configuration_format:
        type: str
        required: false
        default: XML
        choices:
          - XML
          - PROPERTY_FILE
        description:
          - "Safety valves in Cloudera Manager are stored as either in XML format like this:"
          - "<property> <name>KEY</name> <value>VALUE</value> </property>"
          - "Or in a property file format like this:"
          - "name=value"
          - "This format should be checked beforehand in Cloudera Manager when updating an unknown safety-valve"
